version: '3.8'
services:
  account-service:
    image: account-service-image
    build:
      context: ./simbir_account_service
    ports:
      - "8090:8090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin123
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  hospital-service:
    image: hospital-service-image
    build:
      context: ./simbir-hospital-service
    ports:
      - "9080:9080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin123
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  document-service:
    image: document-service-image
    build:
      context: ./simbir-document-service
    ports:
      - "9070:9070"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin123
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  timetable-service:
    image: timetable-service-image
    build:
      context: ./simbir-timetable-service
    ports:
      - "9060:9060"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin123
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  backend:
    driver: bridge
